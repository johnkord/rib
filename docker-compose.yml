version: "3.9"
services:
  # Backend Application
  rib-backend:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - JWT_SECRET=${JWT_SECRET:-your-super-secret-jwt-key-at-least-32-characters}
      - DATABASE_URL=postgres://postgres:postgres@postgres:5432/rib
      - REDIS_URL=redis://redis:6379
      - S3_ENDPOINT=http://minio:9000
      - S3_ACCESS_KEY=minioadmin
      - S3_SECRET_KEY=minioadmin
      - S3_BUCKET=rib-images
      - RUST_LOG=${RUST_LOG:-info}
      - FRONTEND_URL=http://localhost:3000
      - RIB_DATA_DIR=/app/data
    volumes:
      - rib-data:/app/data
    depends_on:
      - postgres
      - redis
      - minio
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/docs"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  # Frontend Application
  rib-frontend:
    build:
      context: ./rib-react
      dockerfile: Dockerfile
    ports:
      - "3000:80"
    depends_on:
      - rib-backend
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Database
  postgres:
    image: postgres:16-alpine
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: rib
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 10s
      retries: 5
      
  # Cache
  redis:
    image: redis:7-alpine
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      retries: 3
      
  # Object Storage
  minio:
    image: quay.io/minio/minio:RELEASE.2024-07-26T22-37-53Z
    command: server /data --console-address :9001
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio-data:/data
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
      
  # Email Testing
  mailhog:
    image: mailhog/mailhog:v1.0.1
    ports:
      - "1025:1025" # SMTP
      - "8025:8025" # Web UI
    restart: unless-stopped

volumes:
  postgres-data: {}
  redis-data: {}
  minio-data: {}
  rib-data: {}
